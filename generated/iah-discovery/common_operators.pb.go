// Filter type and option definitions

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v5.29.3
// source: common_operators.proto

package iah_discovery

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ComparisonOperator int32

const (
	ComparisonOperator_EQUAL                    ComparisonOperator = 0 // == (exact match for strings, case sensitive)
	ComparisonOperator_NOT_EQUAL                ComparisonOperator = 1 // !=
	ComparisonOperator_GREATER_THAN             ComparisonOperator = 2 // >
	ComparisonOperator_GREATER_THAN_OR_EQUAL_TO ComparisonOperator = 3 // >=
	ComparisonOperator_LESS_THAN                ComparisonOperator = 4 // <
	ComparisonOperator_LESS_THAN_OR_EQUAL_TO    ComparisonOperator = 5 // <=
	// for string datatype only
	ComparisonOperator_STRING_PATTERN ComparisonOperator = 6 // '?' is a wildcard for one character, "*" is a wildcard for many characters
)

// Enum value maps for ComparisonOperator.
var (
	ComparisonOperator_name = map[int32]string{
		0: "EQUAL",
		1: "NOT_EQUAL",
		2: "GREATER_THAN",
		3: "GREATER_THAN_OR_EQUAL_TO",
		4: "LESS_THAN",
		5: "LESS_THAN_OR_EQUAL_TO",
		6: "STRING_PATTERN",
	}
	ComparisonOperator_value = map[string]int32{
		"EQUAL":                    0,
		"NOT_EQUAL":                1,
		"GREATER_THAN":             2,
		"GREATER_THAN_OR_EQUAL_TO": 3,
		"LESS_THAN":                4,
		"LESS_THAN_OR_EQUAL_TO":    5,
		"STRING_PATTERN":           6,
	}
)

func (x ComparisonOperator) Enum() *ComparisonOperator {
	p := new(ComparisonOperator)
	*p = x
	return p
}

func (x ComparisonOperator) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ComparisonOperator) Descriptor() protoreflect.EnumDescriptor {
	return file_common_operators_proto_enumTypes[0].Descriptor()
}

func (ComparisonOperator) Type() protoreflect.EnumType {
	return &file_common_operators_proto_enumTypes[0]
}

func (x ComparisonOperator) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ComparisonOperator.Descriptor instead.
func (ComparisonOperator) EnumDescriptor() ([]byte, []int) {
	return file_common_operators_proto_rawDescGZIP(), []int{0}
}

var File_common_operators_proto protoreflect.FileDescriptor

var file_common_operators_proto_rawDesc = []byte{
	0x0a, 0x16, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1b, 0x73, 0x69, 0x65, 0x6d, 0x65, 0x6e,
	0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x73, 0x2e, 0x76, 0x31, 0x2a, 0x9c, 0x01, 0x0a, 0x12, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x72,
	0x69, 0x73, 0x6f, 0x6e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x09, 0x0a, 0x05,
	0x45, 0x51, 0x55, 0x41, 0x4c, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x4e, 0x4f, 0x54, 0x5f, 0x45,
	0x51, 0x55, 0x41, 0x4c, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x47, 0x52, 0x45, 0x41, 0x54, 0x45,
	0x52, 0x5f, 0x54, 0x48, 0x41, 0x4e, 0x10, 0x02, 0x12, 0x1c, 0x0a, 0x18, 0x47, 0x52, 0x45, 0x41,
	0x54, 0x45, 0x52, 0x5f, 0x54, 0x48, 0x41, 0x4e, 0x5f, 0x4f, 0x52, 0x5f, 0x45, 0x51, 0x55, 0x41,
	0x4c, 0x5f, 0x54, 0x4f, 0x10, 0x03, 0x12, 0x0d, 0x0a, 0x09, 0x4c, 0x45, 0x53, 0x53, 0x5f, 0x54,
	0x48, 0x41, 0x4e, 0x10, 0x04, 0x12, 0x19, 0x0a, 0x15, 0x4c, 0x45, 0x53, 0x53, 0x5f, 0x54, 0x48,
	0x41, 0x4e, 0x5f, 0x4f, 0x52, 0x5f, 0x45, 0x51, 0x55, 0x41, 0x4c, 0x5f, 0x54, 0x4f, 0x10, 0x05,
	0x12, 0x12, 0x0a, 0x0e, 0x53, 0x54, 0x52, 0x49, 0x4e, 0x47, 0x5f, 0x50, 0x41, 0x54, 0x54, 0x45,
	0x52, 0x4e, 0x10, 0x06, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_common_operators_proto_rawDescOnce sync.Once
	file_common_operators_proto_rawDescData = file_common_operators_proto_rawDesc
)

func file_common_operators_proto_rawDescGZIP() []byte {
	file_common_operators_proto_rawDescOnce.Do(func() {
		file_common_operators_proto_rawDescData = protoimpl.X.CompressGZIP(file_common_operators_proto_rawDescData)
	})
	return file_common_operators_proto_rawDescData
}

var file_common_operators_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_common_operators_proto_goTypes = []any{
	(ComparisonOperator)(0), // 0: siemens.common.operators.v1.ComparisonOperator
}
var file_common_operators_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_common_operators_proto_init() }
func file_common_operators_proto_init() {
	if File_common_operators_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_common_operators_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_common_operators_proto_goTypes,
		DependencyIndexes: file_common_operators_proto_depIdxs,
		EnumInfos:         file_common_operators_proto_enumTypes,
	}.Build()
	File_common_operators_proto = out.File
	file_common_operators_proto_rawDesc = nil
	file_common_operators_proto_goTypes = nil
	file_common_operators_proto_depIdxs = nil
}
