# SPDX-FileCopyrightText: 2024 Siemens AG
#
# SPDX-License-Identifier: MIT
---
project_name: {{ cookiecutter.al_project }}

version: 2

before:
  hooks:
    - go generate ./...
    - go mod vendor

builds:
  - id: {{ cookiecutter.al_project }}
    binary: {{ cookiecutter.al_project }}
    tags:
      - webserver
    flags:
      - -trimpath
    ldflags:
      - -s -w -extldflags '-static'
{% raw %}
      - -X main.version={{.Version}} -X main.commit={{.Commit}} -X main.date={{.CommitDate}}
{% endraw %}
    env:
      - CGO_ENABLED=0
    goos:
      - linux
      - darwin
      - windows
    goarch:
      - amd64
      - arm64
    ignore:
      - goos: windows
        goarch: arm64
{% raw %}
    mod_timestamp: "{{ .CommitTimestamp }}"

archives:
  - format: tar.gz
    files:
      - vendor\
    name_template: >-
      {{ .ProjectName }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
    format_overrides:
      - goos: windows
        format: zip

{% endraw %}

nfpms:
  - id: {{ cookiecutter.al_project }}
    package_name: {{ cookiecutter.al_project }}
    builds:
      - {{ cookiecutter.al_project }}
    vendor: {{cookiecutter.company }}
    homepage: {{ cookiecutter.company_url }}
    maintainer: {{ cookiecutter.author_name }} <{{ cookiecutter.author_email }}>
    description: |-
      {{ cookiecutter.al_name }}
    license: {{ cookiecutter.company }} {{ cookiecutter.year }}
    formats:
      - deb
    bindir: /usr/bin
    version_metadata: git
    section: default
    priority: extra
    contents:
      - src: contrib/{{ cookiecutter.al_project }}.service
        dst: /lib/systemd/system/{{ cookiecutter.al_project }}.service
        type: "config"
    scripts:
      postinstall: "contrib/postinstall.bash"
      postremove: "contrib/postremove.bash"

{% raw %}
checksum:
  name_template: "{{.ProjectName}}_{{.Version}}.sha256"
  algorithm: sha256

snapshot:
  name_template: "{{ incpatch .Version }}-next"
  {% endraw %}

dockers:
  - id: {{ cookiecutter.al_project }}-linux-amd64
    ids:
      - {{ cookiecutter.al_project }}
    image_templates:
      - "{{ cookiecutter.al_project }}{% raw %}:{{ .Tag }}-linux-amd64{% endraw %}"
      - "{{ cookiecutter.al_project }}:latest-linux-amd64"
    dockerfile: Dockerfile
    use: buildx
    goos: linux
    goarch: amd64
    build_flag_templates:
      - "--platform=linux/amd64"
  - id: {{ cookiecutter.al_project }}-arm64
    ids:
      - {{ cookiecutter.al_project }}
    image_templates:
      - "{{ cookiecutter.al_project }}{% raw %}:{{ .Tag }}-linux-arm64{% endraw %}"
      - "{{ cookiecutter.al_project }}:latest-linux-arm64"
    dockerfile: Dockerfile
    use: buildx
    goos: linux
    goarch: amd64
    build_flag_templates:
      - --platform=linux/arm64

docker_manifests:
  - name_template: "{{ cookiecutter.al_project }}{% raw %}:{{ .Tag }}{% endraw %}"
    image_templates:
      - "{{ cookiecutter.al_project }}{% raw %}:{{ .Tag }}-linux-amd64{% endraw %}"
      - "{{ cookiecutter.al_project }}{% raw %}:{{ .Tag }}-linux-arm64{% endraw %}"
  - name_template: "{{ cookiecutter.al_project }}:latest"
    image_templates:
      - "{{ cookiecutter.al_project }}:latest-linux-amd64"
      - "{{ cookiecutter.al_project }}:latest-linux-arm64"

changelog:
  sort: asc
  groups:
    - title: Features
      regexp: "^.*feat[(\\w)]*:+.*$"
      order: 0
    - title: "Bug fixes"
      regexp: "^.*fix[(\\w)]*:+.*$"
      order: 1
    - title: Others
      order: 999
  filters:
    exclude:
      - "^docs:"
      - "^test:"
